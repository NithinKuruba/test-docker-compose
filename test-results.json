{
  "stats": {
    "suites": 16,
    "tests": 96,
    "passes": 96,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-11T19:21:48.605Z",
    "end": "2022-02-11T19:26:30.307Z",
    "duration": 183157,
    "testsRegistered": 96,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6dc5d08d-e789-41b1-892e-b910583c1bd6",
      "title": "",
      "fullFile": "cypress/tests/01-create-api.spec.ts",
      "file": "cypress/tests/01-create-api.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f104fdb6-37cf-4eae-8032-f89471a8b827",
          "title": "Create API Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "authenticates Janis (api owner)",
              "fullTitle": "Create API Spec authenticates Janis (api owner)",
              "timedOut": null,
              "duration": 6367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "dfca9f6c-13c5-4a60-9855-4e06adfbc08b",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates and activates new namespace",
              "fullTitle": "Create API Spec creates and activates new namespace",
              "timedOut": null,
              "duration": 2922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ namespace }) => {\n    home.createNamespace(namespace);\n});",
              "err": {},
              "uuid": "0e884852-5056-40a5-aa96-1398190768e9",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates a new service account",
              "fullTitle": "Create API Spec creates a new service account",
              "timedOut": null,
              "duration": 2855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(sa.path);\ncy.get('@apiowner').then(({ serviceAccount }) => {\n    sa.createServiceAccount(serviceAccount.scopes);\n});\nsa.saveServiceAcctCreds();",
              "err": {},
              "uuid": "d01223b3-8b18-4340-be8f-53a517e61f42",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "publishes a new API to Kong Gateway",
              "fullTitle": "Create API Spec publishes a new API to Kong Gateway",
              "timedOut": null,
              "duration": 1216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ namespace }) => {\n    cy.publishApi('service.yml', namespace).then(() => {\n        cy.get('@publishAPIResponse').then((res) => {\n            cy.log(JSON.stringify(res.body));\n        });\n    });\n});",
              "err": {},
              "uuid": "fcd0c371-94b0-43ff-a02c-b3c19990b03d",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates as new product in the directory",
              "fullTitle": "Create API Spec creates as new product in the directory",
              "timedOut": null,
              "duration": 1478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ product }) => {\n    pd.createNewProduct(product.name, product.environment.name);\n});",
              "err": {},
              "uuid": "69b80c9b-b738-46fb-a678-99b9c551c96a",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "publish product to directory",
              "fullTitle": "Create API Spec publish product to directory",
              "timedOut": null,
              "duration": 3459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ product }) => {\n    pd.editProductEnvironment(product.name, product.environment.name);\n    pd.editProductEnvironmentConfig(product.environment.config);\n});\npd.generateKongPluginConfig('service.yml');",
              "err": {},
              "uuid": "98cca992-bb98-454d-b1dc-ef50a8be246c",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "applies authorization plugin to service published to Kong Gateway",
              "fullTitle": "Create API Spec applies authorization plugin to service published to Kong Gateway",
              "timedOut": null,
              "duration": 661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ namespace }) => {\n    cy.publishApi('service-plugin.yml', namespace).then(() => {\n        cy.get('@publishAPIResponse').then((res) => {\n            cy.log(JSON.stringify(res.body));\n        });\n    });\n});",
              "err": {},
              "uuid": "a6461129-3300-4e4f-a708-2707962f4188",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "update the Dataset in BC Data Catelogue to appear the API in the Directory",
              "fullTitle": "Create API Spec update the Dataset in BC Data Catelogue to appear the API in the Directory",
              "timedOut": null,
              "duration": 1276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ product }) => {\n    pd.updateDatasetNameToCatelogue(product.name, product.environment.name);\n});",
              "err": {},
              "uuid": "09b876b3-de88-4525-99c6-b89e2f6ba809",
              "parentUUID": "f104fdb6-37cf-4eae-8032-f89471a8b827",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfca9f6c-13c5-4a60-9855-4e06adfbc08b",
            "0e884852-5056-40a5-aa96-1398190768e9",
            "d01223b3-8b18-4340-be8f-53a517e61f42",
            "fcd0c371-94b0-43ff-a02c-b3c19990b03d",
            "69b80c9b-b738-46fb-a678-99b9c551c96a",
            "98cca992-bb98-454d-b1dc-ef50a8be246c",
            "a6461129-3300-4e4f-a708-2707962f4188",
            "09b876b3-de88-4525-99c6-b89e2f6ba809"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20234,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b3930620-45c1-4814-9b28-c53f60b4d9b5",
      "title": "",
      "fullFile": "cypress/tests/02-team-access.spec.ts",
      "file": "cypress/tests/02-team-access.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3eb68660-96b6-45ad-856b-43e5832ce5d7",
          "title": "Team Access Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "authenticates Janis (api owner)",
              "fullTitle": "Team Access Spec authenticates Janis (api owner)",
              "timedOut": null,
              "duration": 5513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user, namespace }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n    cy.log('Logged in!');\n    home.useNamespace(namespace);\n});",
              "err": {},
              "uuid": "c3a9f08b-4f1a-4457-bb52-94a94e42235e",
              "parentUUID": "3eb68660-96b6-45ad-856b-43e5832ce5d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "grant namespace access to Mark (access manager)",
              "fullTitle": "Team Access Spec grant namespace access to Mark (access manager)",
              "timedOut": null,
              "duration": 2002,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ permission }) => {\n    cy.visit(na.path);\n    na.clickGrantUserAccessButton();\n    na.grantPermission(permission.Mark);\n});",
              "err": {},
              "uuid": "bb05dd6d-dc90-4a0e-b0a2-08fd70e33e1f",
              "parentUUID": "3eb68660-96b6-45ad-856b-43e5832ce5d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Grant CredentialIssuer.Admin permission to Janis (API Owner)",
              "fullTitle": "Team Access Spec Grant CredentialIssuer.Admin permission to Janis (API Owner)",
              "timedOut": null,
              "duration": 1860,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user, namespaceAccessPermissions }) => {\n    cy.visit(na.path);\n    na.clickGrantUserAccessButton();\n    na.grantPermission({ userName: user.credentials.username, accessRole: namespaceAccessPermissions });\n});",
              "err": {},
              "uuid": "9efeff53-0686-4b1b-a118-7336abe7c255",
              "parentUUID": "3eb68660-96b6-45ad-856b-43e5832ce5d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a9f08b-4f1a-4457-bb52-94a94e42235e",
            "bb05dd6d-dc90-4a0e-b0a2-08fd70e33e1f",
            "9efeff53-0686-4b1b-a118-7336abe7c255"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b397bdaa-e1cb-4a5e-8dfd-c9b2815d7e1d",
      "title": "",
      "fullFile": "cypress/tests/03-rqst-access.spec.ts",
      "file": "cypress/tests/03-rqst-access.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d538ba2f-5762-4c2a-88fb-c5d4684566ef",
          "title": "Request Access Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "authenticates Harley (developer)",
              "fullTitle": "Request Access Spec authenticates Harley (developer)",
              "timedOut": null,
              "duration": 2992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@developer').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "172915bc-5dcf-4102-877b-665e1d765c02",
              "parentUUID": "d538ba2f-5762-4c2a-88fb-c5d4684566ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates an application",
              "fullTitle": "Request Access Spec creates an application",
              "timedOut": null,
              "duration": 1960,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(app.path);\ncy.get('@developer').then(({ application }) => {\n    app.createApplication(application);\n});",
              "err": {},
              "uuid": "709dec87-8723-4978-b3cc-fab5fc105bc0",
              "parentUUID": "d538ba2f-5762-4c2a-88fb-c5d4684566ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates an access request",
              "fullTitle": "Request Access Spec creates an access request",
              "timedOut": null,
              "duration": 3537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(apiDir.path);\ncy.get('@developer').then(({ product, application, accessRequest }) => {\n    apiDir.createAccessRequest(product, application, accessRequest);\n    myAccessPage.clickOnGenerateSecretButton();\n    cy.contains(\"API Key\").should('be.visible');\n    myAccessPage.saveAPIKeyValue();\n});",
              "err": {},
              "uuid": "a3ac157e-9c49-494c-8a68-9a943c83f9dc",
              "parentUUID": "d538ba2f-5762-4c2a-88fb-c5d4684566ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "172915bc-5dcf-4102-877b-665e1d765c02",
            "709dec87-8723-4978-b3cc-fab5fc105bc0",
            "a3ac157e-9c49-494c-8a68-9a943c83f9dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8489,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9be5e643-acfb-47b9-b889-70d484f36495",
      "title": "",
      "fullFile": "cypress/tests/04-approve-pending-rqst.spec.ts",
      "file": "cypress/tests/04-approve-pending-rqst.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e3dc4289-40cb-4c9d-bb98-58372f42bc67",
          "title": "Approve Pending Request Spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "approves an access request",
              "fullTitle": "Approve Pending Request Spec approves an access request",
              "timedOut": null,
              "duration": 6099,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, namespace }) => {\n    cy.login(user.credentials.username, user.credentials.password).then(() => {\n        cy.visit(consumers.path);\n        home.useNamespace(namespace);\n        cy.contains('Review').click();\n        cy.contains('Approve').click();\n        cy.contains('span', 'Complete', { timeout: 10000 }).should('be.visible');\n    });\n});",
              "err": {},
              "uuid": "1de1c904-2c8b-459f-a157-1d8cb5f37605",
              "parentUUID": "e3dc4289-40cb-4c9d-bb98-58372f42bc67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that API is accessible with the generated API Key",
              "fullTitle": "Approve Pending Request Spec Verify that API is accessible with the generated API Key",
              "timedOut": null,
              "duration": 738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        cy.log(response);\n        expect(response.status).to.be.equal(200);\n    });\n});",
              "err": {},
              "uuid": "5155fa1f-d983-4d78-bb2f-e255422aa8aa",
              "parentUUID": "e3dc4289-40cb-4c9d-bb98-58372f42bc67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1de1c904-2c8b-459f-a157-1d8cb5f37605",
            "5155fa1f-d983-4d78-bb2f-e255422aa8aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6837,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e5b2968-9ec2-4ec3-8332-db53604712c9",
          "title": "Turn off the Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Turn off the authentication switch",
              "fullTitle": "Turn off the Authentication Turn off the authentication switch",
              "timedOut": null,
              "duration": 3753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(consumers.path);\nconsumers.clickOnTheFirstConsumerID();\nconsumers.turnOnACLSwitch(false);",
              "err": {},
              "uuid": "1a4e2237-5334-4211-880d-f432b368efe6",
              "parentUUID": "3e5b2968-9ec2-4ec3-8332-db53604712c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that API is not accessible with the generated API Key",
              "fullTitle": "Turn off the Authentication Verify that API is not accessible with the generated API Key",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(403);\n        expect(response.body.message).to.be.contain('You cannot consume this service');\n    });\n});",
              "err": {},
              "uuid": "8f30f2b7-1667-4740-a203-182cfde6eb04",
              "parentUUID": "3e5b2968-9ec2-4ec3-8332-db53604712c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a4e2237-5334-4211-880d-f432b368efe6",
            "8f30f2b7-1667-4740-a203-182cfde6eb04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3785,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cdcf26a7-6985-42e1-ae64-40977bf5f393",
      "title": "",
      "fullFile": "cypress/tests/05-apply-kong-api-only-consumer.ts",
      "file": "cypress/tests/05-apply-kong-api-only-consumer.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
          "title": "Apply Kong API key only plugin",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Apply Key-auth only authorization plugin to Kong Gateway",
              "fullTitle": "Apply Kong API key only plugin Apply Key-auth only authorization plugin to Kong Gateway",
              "timedOut": null,
              "duration": 1557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ namespace }) => {\n    cy.publishApi('service-plugin-key-auth-only.yml', namespace).then(() => {\n        cy.get('@publishAPIResponse').then((res) => {\n            cy.log(JSON.stringify(res.body));\n        });\n    });\n});",
              "err": {},
              "uuid": "3a2403cf-b227-4efa-9f99-4f014e317e29",
              "parentUUID": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get the plugin ID of Key-auth plugin",
              "fullTitle": "Apply Kong API key only plugin Get the plugin ID of Key-auth plugin",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.makeKongGatewayRequest('plugins', '', 'GET').then((response) => {\n    expect(response.status).to.be.equal(200);\n    pluginID = response.body.data[0].id;\n});",
              "err": {},
              "uuid": "9b0c8ff6-ec96-408d-a347-9824333a2c7f",
              "parentUUID": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a new consumer and save the consumer Id",
              "fullTitle": "Apply Kong API key only plugin Create a new consumer and save the consumer Id",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.makeKongGatewayRequest('consumers', 'createConsumer', 'POST').then((response) => {\n    expect(response.status).to.be.equal(201);\n    consumerID = response.body.id;\n    cy.saveState(\"consumersid\", consumerID);\n});",
              "err": {},
              "uuid": "c6007175-e576-4ce8-a59c-4b25b9c1dc5d",
              "parentUUID": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create a key for the newly created consumer",
              "fullTitle": "Apply Kong API key only plugin Create a key for the newly created consumer",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const endpoint = 'consumers/' + consumerID + '/key-auth';\ncy.makeKongGatewayRequest(endpoint, '', 'POST').then((response) => {\n    expect(response.status).to.be.equal(201);\n    consumerKey = response.body.key;\n    cy.saveState(\"consumerkey\", consumerKey);\n});",
              "err": {},
              "uuid": "5ada8704-681c-4292-a6bb-d27bd0bc2642",
              "parentUUID": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update the Kong key-auth plugin the new consumer",
              "fullTitle": "Apply Kong API key only plugin Update the Kong key-auth plugin the new consumer",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.saveState(\"config.anonymous\", consumerID);\ncy.updateKongPlugin('', 'keyAuth', 'plugins/' + pluginID, 'PATCH').then((response) => {\n    expect(response.status).to.be.equal(200);\n});",
              "err": {},
              "uuid": "429db587-64f2-47e2-9222-815c42b7760c",
              "parentUUID": "ab6bc6a0-8b73-4540-b3c6-36f0e807464a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a2403cf-b227-4efa-9f99-4f014e317e29",
            "9b0c8ff6-ec96-408d-a347-9824333a2c7f",
            "c6007175-e576-4ce8-a59c-4b25b9c1dc5d",
            "5ada8704-681c-4292-a6bb-d27bd0bc2642",
            "429db587-64f2-47e2-9222-815c42b7760c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1801,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b7dd72dc-840a-4797-895d-dda09f2245dc",
      "title": "",
      "fullFile": "cypress/tests/06-kong-api-only-apply-rate-limiting.ts",
      "file": "cypress/tests/06-kong-api-only-apply-rate-limiting.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4be52ecc-c022-45b0-ad1c-47e46e1c0e09",
          "title": "Check the API key for free and elevated access",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the service is accessibale with API key for free access",
              "fullTitle": "Check the API key for free and elevated access Verify the service is accessibale with API key for free access",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => __awaiter(void 0, void 0, void 0, function* () {\n    cy.fixture('state/store').then((creds) => {\n        const key = creds.consumerKey;\n        cy.makeKongRequest(product.environment.config.serviceName, 'GET', key).then((response) => {\n            expect(response.status).to.be.equal(200);\n        });\n    });\n}));",
              "err": {},
              "uuid": "04439cb4-ce31-427c-b44f-d6bef33814fe",
              "parentUUID": "4be52ecc-c022-45b0-ad1c-47e46e1c0e09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the service is accessible with API key for elevated access",
              "fullTitle": "Check the API key for free and elevated access Verify the service is accessible with API key for elevated access",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => __awaiter(void 0, void 0, void 0, function* () {\n    cy.fixture('state/store').then((creds) => {\n        const key = creds.consumerKey;\n        cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n            expect(response.status).to.be.equal(200);\n        });\n    });\n}));",
              "err": {},
              "uuid": "eb153262-b9d8-4a28-84e8-e3e2dad67e7d",
              "parentUUID": "4be52ecc-c022-45b0-ad1c-47e46e1c0e09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04439cb4-ce31-427c-b44f-d6bef33814fe",
            "eb153262-b9d8-4a28-84e8-e3e2dad67e7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "def392c5-40c5-42fe-a79b-397f4b272690",
          "title": "Apply Rate limiting for Free Access",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit to free access",
              "fullTitle": "Apply Rate limiting for Free Access set api rate limit to free access",
              "timedOut": null,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.updateKongPlugin('consumers', 'rateLimitingConsumer').then((response) => {\n    expect(response.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "579fe140-6e45-45bb-b86d-63af39469a1f",
              "parentUUID": "def392c5-40c5-42fe-a79b-397f4b272690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the rate limiting is applied for free access",
              "fullTitle": "Apply Rate limiting for Free Access Verify the rate limiting is applied for free access",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => __awaiter(void 0, void 0, void 0, function* () {\n    cy.fixture('state/store').then((creds) => {\n        const key = creds.consumerkey;\n        cy.makeKongRequest(product.environment.config.serviceName, 'GET', key).then((response) => {\n            expect(response.status).to.be.equal(200);\n            expect(parseInt(response.headers[\"x-ratelimit-remaining-hour\"])).to.be.equal(99);\n        });\n    });\n}));",
              "err": {},
              "uuid": "58ab849d-879d-45be-9b03-6508b3652e83",
              "parentUUID": "def392c5-40c5-42fe-a79b-397f4b272690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "579fe140-6e45-45bb-b86d-63af39469a1f",
            "58ab849d-879d-45be-9b03-6508b3652e83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8352ecda-abcd-4ab8-8c07-59c918d1d033",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/01-client-cred-team-access.ts",
      "file": "cypress/tests/client-credential-flow/01-client-cred-team-access.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ad73d06-d596-4e3a-b1a1-8cee3721840c",
          "title": "Grant appropriate permissions to team members for client credential flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Authenticates api owner",
              "fullTitle": "Grant appropriate permissions to team members for client credential flow Authenticates api owner",
              "timedOut": null,
              "duration": 2538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "af1b1806-9a53-4489-99fa-a7307c74f6d5",
              "parentUUID": "3ad73d06-d596-4e3a-b1a1-8cee3721840c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates and activates new namespace",
              "fullTitle": "Grant appropriate permissions to team members for client credential flow Creates and activates new namespace",
              "timedOut": null,
              "duration": 2919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ clientCredentials }) => {\n    home.createNamespace(clientCredentials.namespace);\n});",
              "err": {},
              "uuid": "b6a738fb-a4c2-4aaf-8501-014f50f7e2b4",
              "parentUUID": "3ad73d06-d596-4e3a-b1a1-8cee3721840c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Grant namespace access to access manager(Mark)",
              "fullTitle": "Grant appropriate permissions to team members for client credential flow Grant namespace access to access manager(Mark)",
              "timedOut": null,
              "duration": 1440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ permission }) => {\n    cy.visit(na.path);\n    na.clickGrantUserAccessButton();\n    na.grantPermission(permission.Mark);\n});",
              "err": {},
              "uuid": "4a306def-0e14-4e08-8fb8-d17d65d9e0cf",
              "parentUUID": "3ad73d06-d596-4e3a-b1a1-8cee3721840c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Grant CredentialIssuer.Admin permission to API Owner",
              "fullTitle": "Grant appropriate permissions to team members for client credential flow Grant CredentialIssuer.Admin permission to API Owner",
              "timedOut": null,
              "duration": 1515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user, namespaceAccessPermissions }) => {\n    cy.visit(na.path);\n    na.clickGrantUserAccessButton();\n    na.grantPermission({ userName: user.credentials.username, accessRole: namespaceAccessPermissions });\n});",
              "err": {},
              "uuid": "838969c8-1dd8-41c8-9026-efc6aeddfc64",
              "parentUUID": "3ad73d06-d596-4e3a-b1a1-8cee3721840c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af1b1806-9a53-4489-99fa-a7307c74f6d5",
            "b6a738fb-a4c2-4aaf-8501-014f50f7e2b4",
            "4a306def-0e14-4e08-8fb8-d17d65d9e0cf",
            "838969c8-1dd8-41c8-9026-efc6aeddfc64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cd124ed2-2f6d-44b0-824b-7263cee256c2",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/02-client-cred-create-api-prod-auth-pro.ts",
      "file": "cypress/tests/client-credential-flow/02-client-cred-create-api-prod-auth-pro.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "483744fb-93e1-4eb3-b585-ffbc8436339b",
          "title": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Authenticates api owner",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Authenticates api owner",
              "timedOut": null,
              "duration": 2738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "57e556d9-5b33-4b60-bbee-42420e823f5e",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Activates namespace for client credential flow tests",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Activates namespace for client credential flow tests",
              "timedOut": null,
              "duration": 2624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ clientCredentials }) => {\n    home.useNamespace(clientCredentials.namespace);\n});",
              "err": {},
              "uuid": "1c35dcbc-33c0-4c8b-8325-a5b4bca136ff",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates authorization profile for Client ID/Secret",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Creates authorization profile for Client ID/Secret",
              "timedOut": null,
              "duration": 4234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(authProfile.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let ap = clientCredentials.clientIdSecret.authProfile;\n    authProfile.createAuthProfile(ap);\n    cy.get(authProfile.profileTable).contains(ap.name).should('be.visible');\n});",
              "err": {},
              "uuid": "c80cfc21-fbe5-4d0b-a834-9244791dfac6",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates authorization profile for JWT - Generated Key Pair",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Creates authorization profile for JWT - Generated Key Pair",
              "timedOut": null,
              "duration": 4060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(authProfile.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let ap = clientCredentials.jwtKeyPair.authProfile;\n    authProfile.createAuthProfile(ap);\n    cy.get(authProfile.profileTable).contains(ap.name).should('be.visible');\n});",
              "err": {},
              "uuid": "927a9755-c3fa-404b-93c1-0d24ff95c88d",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates authorization profile for JWKS URL",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Creates authorization profile for JWKS URL",
              "timedOut": null,
              "duration": 4027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(authProfile.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let ap = clientCredentials.jwksUrl.authProfile;\n    authProfile.createAuthProfile(ap);\n    cy.get(authProfile.profileTable).contains(ap.name).should('be.visible');\n});",
              "err": {},
              "uuid": "2f337b8f-773f-419d-9b01-711a1ccbacf2",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates a new service account",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Creates a new service account",
              "timedOut": null,
              "duration": 1840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(sa.path);\ncy.get('@apiowner').then(({ serviceAccount }) => {\n    sa.createServiceAccount(serviceAccount.scopes);\n});\nsa.saveServiceAcctCreds();",
              "err": {},
              "uuid": "df1177d4-c789-4517-a7c4-3f955bfc0e6e",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Publishes a new API to Kong Gateway",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Publishes a new API to Kong Gateway",
              "timedOut": null,
              "duration": 795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ clientCredentials }) => {\n    cy.publishApi('cc-service.yml', clientCredentials.namespace).then(() => {\n        cy.get('@publishAPIResponse').then((res) => {\n            cy.log(JSON.stringify(res.body));\n        });\n    });\n});",
              "err": {},
              "uuid": "0108c43d-fd0c-4d7e-9957-6f61c98de1ef",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates a new product in the directory",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Creates a new product in the directory",
              "timedOut": null,
              "duration": 1562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    pd.createNewProduct(clientCredentials.clientIdSecret.product.name, clientCredentials.clientIdSecret.product.environment.name);\n});",
              "err": {},
              "uuid": "d1381523-8214-4eb3-8618-057e9fd83493",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds environment with Client ID/Secret authenticator to product",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Adds environment with Client ID/Secret authenticator to product",
              "timedOut": null,
              "duration": 3034,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let product = clientCredentials.clientIdSecret.product;\n    let authProfile = clientCredentials.clientIdSecret.authProfile;\n    pd.editProductEnvironment(product.name, product.environment.name);\n    product.environment.config.authIssuer = authProfile.name;\n    product.environment.config.authIssuerEnv = authProfile.environmentConfig.environment;\n    pd.editProductEnvironmentConfig(product.environment.config);\n});\npd.generateKongPluginConfig('cc-service.yml');",
              "err": {},
              "uuid": "091fd3ca-686b-4ddc-8562-6a5daa452d02",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds environment with JWT - Generated Key Pair authenticator to product",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Adds environment with JWT - Generated Key Pair authenticator to product",
              "timedOut": null,
              "duration": 3077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let prod = clientCredentials.jwtKeyPair.product;\n    let ap = clientCredentials.jwtKeyPair.authProfile;\n    pd.addEnvToProduct(prod.name, prod.environment.name);\n    pd.editProductEnvironment(prod.name, prod.environment.name);\n    prod.environment.config.authIssuer = ap.name;\n    prod.environment.config.authIssuerEnv = ap.environmentConfig.environment;\n    pd.editProductEnvironmentConfig(prod.environment.config);\n});\npd.generateKongPluginConfig('cc-service.yml');",
              "err": {},
              "uuid": "79797eee-9467-46d3-af1d-c8f297a83d73",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adds environment with JWT - JWKS URL authenticator to product",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Adds environment with JWT - JWKS URL authenticator to product",
              "timedOut": null,
              "duration": 3278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let prod = clientCredentials.jwksUrl.product;\n    let ap = clientCredentials.jwksUrl.authProfile;\n    pd.addEnvToProduct(prod.name, prod.environment.name);\n    pd.editProductEnvironment(prod.name, prod.environment.name);\n    prod.environment.config.authIssuer = ap.name;\n    prod.environment.config.authIssuerEnv = ap.environmentConfig.environment;\n    pd.editProductEnvironmentConfig(prod.environment.config);\n});\npd.generateKongPluginConfig('cc-service.yml');",
              "err": {},
              "uuid": "0aa68258-ea40-46e4-9100-31f2a80ea8eb",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Applies authorization plugin to service published to Kong Gateway",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Applies authorization plugin to service published to Kong Gateway",
              "timedOut": null,
              "duration": 703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ clientCredentials }) => {\n    cy.publishApi('cc-service-plugin.yml', clientCredentials.namespace).then(() => {\n        cy.get('@publishAPIResponse').then((res) => {\n            cy.log(JSON.stringify(res.body));\n        });\n    });\n});",
              "err": {},
              "uuid": "c20a669d-76e9-4c9a-9a8d-73ea308756cc",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update the Dataset in BC Data Catalogue to appear the API in the Directory",
              "fullTitle": "Create API, Product, and Authorization Profiles; Apply Auth Profiles to Product Environments Update the Dataset in BC Data Catalogue to appear the API in the Directory",
              "timedOut": null,
              "duration": 1383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(pd.path);\ncy.get('@apiowner').then(({ clientCredentials }) => {\n    let product = clientCredentials.clientIdSecret.product;\n    pd.updateDatasetNameToCatelogue(product.name, product.environment.name);\n});",
              "err": {},
              "uuid": "8302294d-b8a6-4e7f-8c45-ce81d9136abc",
              "parentUUID": "483744fb-93e1-4eb3-b585-ffbc8436339b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57e556d9-5b33-4b60-bbee-42420e823f5e",
            "1c35dcbc-33c0-4c8b-8325-a5b4bca136ff",
            "c80cfc21-fbe5-4d0b-a834-9244791dfac6",
            "927a9755-c3fa-404b-93c1-0d24ff95c88d",
            "2f337b8f-773f-419d-9b01-711a1ccbacf2",
            "df1177d4-c789-4517-a7c4-3f955bfc0e6e",
            "0108c43d-fd0c-4d7e-9957-6f61c98de1ef",
            "d1381523-8214-4eb3-8618-057e9fd83493",
            "091fd3ca-686b-4ddc-8562-6a5daa452d02",
            "79797eee-9467-46d3-af1d-c8f297a83d73",
            "0aa68258-ea40-46e4-9100-31f2a80ea8eb",
            "c20a669d-76e9-4c9a-9a8d-73ea308756cc",
            "8302294d-b8a6-4e7f-8c45-ce81d9136abc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33355,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "57f6c0ae-77b1-433d-a8fd-b81ec3a72c60",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/03-cids-access-rqst.ts",
      "file": "cypress/tests/client-credential-flow/03-cids-access-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2826ca08-68f9-4402-a361-ddd3b059af15",
          "title": "Developer creates an access request for Client ID/Secret authenticator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Developer logs in",
              "fullTitle": "Developer creates an access request for Client ID/Secret authenticator Developer logs in",
              "timedOut": null,
              "duration": 2479,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@developer').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "01ec74c4-7e48-4a14-b8c7-f46a5a60a2f9",
              "parentUUID": "2826ca08-68f9-4402-a361-ddd3b059af15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an application",
              "fullTitle": "Developer creates an access request for Client ID/Secret authenticator Creates an application",
              "timedOut": null,
              "duration": 2093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(app.path);\ncy.get('@developer').then(({ clientCredentials }) => {\n    app.createApplication(clientCredentials.clientIdSecret.application);\n});",
              "err": {},
              "uuid": "bacf91d9-80ed-42b4-a262-1415fe3e43d9",
              "parentUUID": "2826ca08-68f9-4402-a361-ddd3b059af15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an access request",
              "fullTitle": "Developer creates an access request for Client ID/Secret authenticator Creates an access request",
              "timedOut": null,
              "duration": 2731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(apiDir.path);\ncy.get('@developer').then(({ clientCredentials, accessRequest }) => {\n    let product = clientCredentials.clientIdSecret.product;\n    let app = clientCredentials.clientIdSecret.application;\n    apiDir.createAccessRequest(product, app, accessRequest);\n    ma.clickOnGenerateSecretButton();\n    cy.contains('Client ID').should('be.visible');\n    cy.contains('Client Secret').should('be.visible');\n    cy.contains('Token Endpoint').should('be.visible');\n    ma.saveClientCredentials();\n});",
              "err": {},
              "uuid": "43f2979f-ec90-40d3-9d93-26135aaebb19",
              "parentUUID": "2826ca08-68f9-4402-a361-ddd3b059af15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01ec74c4-7e48-4a14-b8c7-f46a5a60a2f9",
            "bacf91d9-80ed-42b4-a262-1415fe3e43d9",
            "43f2979f-ec90-40d3-9d93-26135aaebb19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc2654bc-dac2-4555-8605-051e2b218487",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/04-cids-access-approve-api-rqst.ts",
      "file": "cypress/tests/client-credential-flow/04-cids-access-approve-api-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db6293e4-8ea3-4974-a7c5-a98c302eadfd",
          "title": "Access manager approves developer access request for Client ID/Secret authenticator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Access Manager logs in",
              "fullTitle": "Access manager approves developer access request for Client ID/Secret authenticator Access Manager logs in",
              "timedOut": null,
              "duration": 4786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, clientCredentials }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n    home.useNamespace(clientCredentials.namespace);\n});",
              "err": {},
              "uuid": "9b1926e2-a8ac-44dd-93b7-0665822f6ce2",
              "parentUUID": "db6293e4-8ea3-4974-a7c5-a98c302eadfd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Access Manager approves developer access request",
              "fullTitle": "Access manager approves developer access request for Client ID/Secret authenticator Access Manager approves developer access request",
              "timedOut": null,
              "duration": 1120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    cy.contains('Review').click();\n    cy.contains('Approve').click();\n});",
              "err": {},
              "uuid": "563dc366-946c-4815-80b0-478dc8201642",
              "parentUUID": "db6293e4-8ea3-4974-a7c5-a98c302eadfd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b1926e2-a8ac-44dd-93b7-0665822f6ce2",
            "563dc366-946c-4815-80b0-478dc8201642"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5906,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "221465c7-90be-488c-8db2-006149998121",
          "title": "Make an API request using Client ID, Secret, and Access Token",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get access token using client ID and secret; make API request",
              "fullTitle": "Make an API request using Client ID, Secret, and Access Token Get access token using client ID and secret; make API request",
              "timedOut": null,
              "duration": 491,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile('cypress/fixtures/state/store.json').then((store_res) => {\n    let cc = JSON.parse(store_res.clientidsecret);\n    cy.getAccessToken(cc.clientId, cc.clientSecret).then(() => {\n        cy.get('@accessTokenResponse').then((token_res) => {\n            let token = token_res.body.access_token;\n            cy.request({\n                url: Cypress.env('KONG_URL'),\n                headers: {\n                    Host: 'cc-service-for-platform.api.gov.bc.ca',\n                },\n                auth: {\n                    bearer: token,\n                },\n            }).then((res) => {\n                expect(res.status).to.eq(200);\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "fbdfc766-0024-40a8-9e52-a47cd0202687",
              "parentUUID": "221465c7-90be-488c-8db2-006149998121",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbdfc766-0024-40a8-9e52-a47cd0202687"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "91eae690-4e8f-45a4-8f82-2c6be06a3535",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/05-jwt-genkp-access-rqst.ts",
      "file": "cypress/tests/client-credential-flow/05-jwt-genkp-access-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "67926014-2b95-4f13-9f9f-d73d65810dcb",
          "title": "Developer creates an access request for JWT Generated Key Pair authenticator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Developer logs in",
              "fullTitle": "Developer creates an access request for JWT Generated Key Pair authenticator Developer logs in",
              "timedOut": null,
              "duration": 2504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@developer').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "e2110fc5-5293-405d-85c1-a947165e4686",
              "parentUUID": "67926014-2b95-4f13-9f9f-d73d65810dcb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an application",
              "fullTitle": "Developer creates an access request for JWT Generated Key Pair authenticator Creates an application",
              "timedOut": null,
              "duration": 1854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(app.path);\ncy.get('@developer').then(({ clientCredentials }) => {\n    app.createApplication(clientCredentials.jwtKeyPair.application);\n});",
              "err": {},
              "uuid": "93d74081-14d8-4923-8e70-7b7a55e22d47",
              "parentUUID": "67926014-2b95-4f13-9f9f-d73d65810dcb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an access request",
              "fullTitle": "Developer creates an access request for JWT Generated Key Pair authenticator Creates an access request",
              "timedOut": null,
              "duration": 3561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(apiDir.path);\ncy.get('@developer').then(({ clientCredentials, accessRequest }) => {\n    let jwtkp = clientCredentials.jwtKeyPair;\n    apiDir.createAccessRequest(jwtkp.product, jwtkp.application, accessRequest);\n    ma.clickOnGenerateSecretButton();\n    cy.contains('Client ID').should('be.visible');\n    cy.contains('Signing Private Key').should('be.visible');\n    cy.contains('Signing Public Certificate').should('be.visible');\n    cy.contains('Token Endpoint').should('be.visible');\n    ma.saveJwtKeyPairCredentials();\n});",
              "err": {},
              "uuid": "bbd03cc8-b0e5-4843-8bfb-ed3d3e387228",
              "parentUUID": "67926014-2b95-4f13-9f9f-d73d65810dcb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2110fc5-5293-405d-85c1-a947165e4686",
            "93d74081-14d8-4923-8e70-7b7a55e22d47",
            "bbd03cc8-b0e5-4843-8bfb-ed3d3e387228"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7919,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb9e21fc-53d8-402f-8efb-a9adc68d6a21",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/06-jwt-genkp-access-approve-api-rqst.ts",
      "file": "cypress/tests/client-credential-flow/06-jwt-genkp-access-approve-api-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50fac149-b479-4a49-93a2-7737a8583f44",
          "title": "Access manager approves developer access request for JWT - Generated Key Pair authenticator",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Access Manager logs in",
              "fullTitle": "Access manager approves developer access request for JWT - Generated Key Pair authenticator Access Manager logs in",
              "timedOut": null,
              "duration": 5434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, clientCredentials }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n    home.useNamespace(clientCredentials.namespace);\n});",
              "err": {},
              "uuid": "5754740a-bd71-4999-98f2-a090dbe6b3a4",
              "parentUUID": "50fac149-b479-4a49-93a2-7737a8583f44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Access Manager approves developer access request",
              "fullTitle": "Access manager approves developer access request for JWT - Generated Key Pair authenticator Access Manager approves developer access request",
              "timedOut": null,
              "duration": 1137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    cy.contains('Review').click();\n    cy.contains('Approve').click();\n});",
              "err": {},
              "uuid": "4f4cc515-5c4b-4227-9db2-96de8bf14935",
              "parentUUID": "50fac149-b479-4a49-93a2-7737a8583f44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5754740a-bd71-4999-98f2-a090dbe6b3a4",
            "4f4cc515-5c4b-4227-9db2-96de8bf14935"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6571,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a605552d-78e2-47f9-8cdb-1acc7a8fef29",
          "title": "Make an API request using JWT signed with private key",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get access token using JWT key pair; make API request",
              "fullTitle": "Make an API request using JWT signed with private key Get access token using JWT key pair; make API request",
              "timedOut": null,
              "duration": 842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile('cypress/fixtures/state/store.json').then((store_res) => {\n    cy.readFile('cypress/fixtures/state/jwtGenPrivateKey.pem').then((privateKey) => {\n        let jwkCred = JSON.parse(store_res.jwtkeypaircredentials);\n        let clientId = jwkCred.clientId;\n        let tokenEndpoint = jwkCred.tokenEndpoint;\n        let now = Math.floor(new Date().getTime() / 1000);\n        let plus5Minutes = new Date((now + 5 * 60) * 1000);\n        let alg = 'RS256';\n        let claims = {\n            aud: Cypress.env('OIDC_ISSUER') + '/auth/realms/master',\n        };\n        let jwt = njwt\n            .create(claims, privateKey, alg)\n            .setIssuedAt(now)\n            .setExpiration(plus5Minutes)\n            .setIssuer(clientId)\n            .setSubject(clientId)\n            .compact();\n        cy.request({\n            url: tokenEndpoint,\n            method: 'POST',\n            body: {\n                grant_type: 'client_credentials',\n                client_id: clientId,\n                scopes: 'openid',\n                client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n                client_assertion: jwt,\n            },\n            form: true,\n        }).then((res) => {\n            let token = res.body.access_token;\n            cy.request({\n                url: Cypress.env('KONG_URL'),\n                headers: {\n                    Host: 'cc-service-for-platform.api.gov.bc.ca',\n                },\n                auth: {\n                    bearer: token,\n                },\n            }).then((res) => {\n                expect(res.status).to.eq(200);\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "112cf935-371b-43f6-9d00-bf804c1c7bbb",
              "parentUUID": "a605552d-78e2-47f9-8cdb-1acc7a8fef29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "112cf935-371b-43f6-9d00-bf804c1c7bbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 842,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4eeff132-2965-410d-b150-25c2b8d6246c",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/07-jwks-url-gen-keys-access-rqst.ts",
      "file": "cypress/tests/client-credential-flow/07-jwks-url-gen-keys-access-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa652007-cda5-4711-a217-baca0e572295",
          "title": "Generates public/private key and publishes public key to JWKS URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Generates, saves keys",
              "fullTitle": "Generates public/private key and publishes public key to JWKS URL Generates, saves keys",
              "timedOut": null,
              "duration": 2794,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.generateKeystore().then((keystore) => {\n    cy.saveState('jwksurlkeys', keystore);\n});",
              "err": {},
              "uuid": "d92eab30-32da-4194-81ee-d0a706f5ab42",
              "parentUUID": "aa652007-cda5-4711-a217-baca0e572295",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Publishes public key to JWKS URL",
              "fullTitle": "Generates public/private key and publishes public key to JWKS URL Publishes public key to JWKS URL",
              "timedOut": null,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.getState('jwksurlkeys').then((keys) => {\n    cy.log(keys);\n    jose.JWK.asKeyStore(keys).then((keyStore) => {\n        cy.request({\n            url: Cypress.env('JWKS_URL'),\n            method: 'POST',\n            body: keyStore.toJSON(),\n            form: true,\n        }).then((res) => {\n            expect(res.status).to.eq(200);\n        });\n    });\n});",
              "err": {},
              "uuid": "3c6f75d4-58a2-46fb-938e-9236b7d12c7d",
              "parentUUID": "aa652007-cda5-4711-a217-baca0e572295",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d92eab30-32da-4194-81ee-d0a706f5ab42",
            "3c6f75d4-58a2-46fb-938e-9236b7d12c7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9720bd9c-c729-493e-8019-1f799f555624",
          "title": "Developer creates an access request for JWKS URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Developer logs in",
              "fullTitle": "Developer creates an access request for JWKS URL Developer logs in",
              "timedOut": null,
              "duration": 2714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@developer').then(({ user }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n});",
              "err": {},
              "uuid": "eb1cef54-7601-480d-a6c9-ae88d9f04590",
              "parentUUID": "9720bd9c-c729-493e-8019-1f799f555624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an application",
              "fullTitle": "Developer creates an access request for JWKS URL Creates an application",
              "timedOut": null,
              "duration": 1796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(app.path);\ncy.get('@developer').then(({ clientCredentials }) => {\n    app.createApplication(clientCredentials.jwksUrl.application);\n});",
              "err": {},
              "uuid": "7de04901-2b54-443d-8373-0f7f3b00f4fc",
              "parentUUID": "9720bd9c-c729-493e-8019-1f799f555624",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creates an access request",
              "fullTitle": "Developer creates an access request for JWKS URL Creates an access request",
              "timedOut": null,
              "duration": 3209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(apiDir.path);\ncy.get('@developer').then(({ clientCredentials, accessRequest }) => {\n    let jwksUrl = clientCredentials.jwksUrl;\n    apiDir.createAccessRequest(jwksUrl.product, jwksUrl.application, accessRequest);\n    ma.clickOnGenerateSecretButton();\n    cy.contains('Client ID').should('be.visible');\n    cy.contains('Issuer').should('be.visible');\n    cy.contains('Token Endpoint').should('be.visible');\n    ma.saveJwksUrlCredentials();\n});",
              "err": {},
              "uuid": "a8d3612a-a83c-4495-8f5a-055da822c1f6",
              "parentUUID": "9720bd9c-c729-493e-8019-1f799f555624",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb1cef54-7601-480d-a6c9-ae88d9f04590",
            "7de04901-2b54-443d-8373-0f7f3b00f4fc",
            "a8d3612a-a83c-4495-8f5a-055da822c1f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7b34246c-9500-4436-825a-bf176f3477ef",
      "title": "",
      "fullFile": "cypress/tests/client-credential-flow/08-jwks-url-access-approval-api-rqst.ts",
      "file": "cypress/tests/client-credential-flow/08-jwks-url-access-approval-api-rqst.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "70f47030-6900-462b-80ad-8b3e61ca891a",
          "title": "Access manager approves developer access request for JWKS URL flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Access Manager logs in",
              "fullTitle": "Access manager approves developer access request for JWKS URL flow Access Manager logs in",
              "timedOut": null,
              "duration": 4878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, clientCredentials }) => {\n    cy.login(user.credentials.username, user.credentials.password);\n    home.useNamespace(clientCredentials.namespace);\n});",
              "err": {},
              "uuid": "c3075c05-2cf5-496a-be1e-8ed2ae9e9a89",
              "parentUUID": "70f47030-6900-462b-80ad-8b3e61ca891a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Access Manager approves developer access request",
              "fullTitle": "Access manager approves developer access request for JWKS URL flow Access Manager approves developer access request",
              "timedOut": null,
              "duration": 1169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    cy.contains('Review').click();\n    cy.contains('Approve').click();\n});",
              "err": {},
              "uuid": "2b3230a6-fa77-4022-8619-6eb8e4f4fc18",
              "parentUUID": "70f47030-6900-462b-80ad-8b3e61ca891a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3075c05-2cf5-496a-be1e-8ed2ae9e9a89",
            "2b3230a6-fa77-4022-8619-6eb8e4f4fc18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6047,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "24aae19d-cbbe-40da-915d-6725766232e9",
          "title": "Make an API request using JWKS URL flow with JWT signed with generated private key",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get access token using JWT key pair; make API request",
              "fullTitle": "Make an API request using JWKS URL flow with JWT signed with generated private key Get access token using JWT key pair; make API request",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.readFile('cypress/fixtures/state/store.json').then((store_res) => {\n    let jwkCred = JSON.parse(store_res.jwksurlcredentials);\n    let ks = store_res.jwksurlkeys;\n    cy.log(ks);\n    let tokenEndpoint = jwkCred.tokenEndpoint;\n    let issuer = jwkCred.issuer;\n    jose.JWK.asKeyStore(ks).then((keyStore) => {\n        cy.log(keyStore.toString());\n        const [key] = keyStore.all({ use: 'sig' });\n        const privateKey = key.toPEM(true);\n        let clientId = jwkCred.clientId;\n        let now = Math.floor(new Date().getTime() / 1000);\n        const plus5Minutes = new Date((now + 5 * 60) * 1000);\n        const alg = 'RS256';\n        let claims = {\n            aud: issuer,\n        };\n        let jwt = njwt\n            .create(claims, privateKey, alg)\n            .setIssuedAt(now)\n            .setExpiration(plus5Minutes)\n            .setIssuer(clientId)\n            .setSubject(clientId)\n            .compact();\n        cy.request({\n            url: tokenEndpoint,\n            method: 'POST',\n            body: {\n                grant_type: 'client_credentials',\n                client_id: clientId,\n                scopes: 'openid',\n                client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer',\n                client_assertion: jwt,\n            },\n            form: true,\n        }).then((res) => {\n            let token = res.body.access_token;\n            cy.request({\n                url: Cypress.env('KONG_URL'),\n                headers: {\n                    Host: 'cc-service-for-platform.api.gov.bc.ca',\n                },\n                auth: {\n                    bearer: token,\n                },\n            }).then((res) => {\n                expect(res.status).to.eq(200);\n            });\n        });\n    });\n});",
              "err": {},
              "uuid": "24cacfe4-3711-42cf-b1b8-2038937c6cc5",
              "parentUUID": "24aae19d-cbbe-40da-915d-6725766232e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24cacfe4-3711-42cf-b1b8-2038937c6cc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6bddc8a-e7d8-4aae-b495-1889142bcb3b",
      "title": "",
      "fullFile": "cypress/tests/manage-control/09-ip-restriction.ts",
      "file": "cypress/tests/manage-control/09-ip-restriction.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9dcb6f44-fc93-48aa-9216-98e5806a25d9",
          "title": "Manage Control-IP Restriction Spec - Service as Scope",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set IP address that is not accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control-IP Restriction Spec - Service as Scope set IP address that is not accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 6717,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, namespace }) => {\n    cy.login(user.credentials.username, user.credentials.password).then(() => {\n        home.useNamespace(namespace);\n        cy.visit(consumers.path);\n        consumers.clickOnTheFirstConsumerID();\n        cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n            consumers.setAllowedIPAddress(ipRestriction.ipRange_inValid, 'Route');\n        });\n    });\n});",
              "err": {},
              "uuid": "807b71dd-8408-4b89-af68-d4a31cd35893",
              "parentUUID": "9dcb6f44-fc93-48aa-9216-98e5806a25d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify IP Restriction error when the API calls other than the allowed IP",
              "fullTitle": "Manage Control-IP Restriction Spec - Service as Scope verify IP Restriction error when the API calls other than the allowed IP",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(403);\n        expect(response.body.message).to.be.contain('Your IP address is not allowed');\n    });\n});",
              "err": {},
              "uuid": "5e08063a-a4ab-4f24-a945-64d91cca965b",
              "parentUUID": "9dcb6f44-fc93-48aa-9216-98e5806a25d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set IP address that is accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control-IP Restriction Spec - Service as Scope set IP address that is accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 2259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n        consumers.setAllowedIPAddress(ipRestriction.ipRange_valid);\n    });\n});",
              "err": {},
              "uuid": "c4fd13fd-72e3-4289-877f-4d41b89a858e",
              "parentUUID": "9dcb6f44-fc93-48aa-9216-98e5806a25d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the success stats when the API calls within the allowed IP range",
              "fullTitle": "Manage Control-IP Restriction Spec - Service as Scope verify the success stats when the API calls within the allowed IP range",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n});",
              "err": {},
              "uuid": "f0355e47-fd62-4428-b274-3ec1f5d51f5b",
              "parentUUID": "9dcb6f44-fc93-48aa-9216-98e5806a25d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "807b71dd-8408-4b89-af68-d4a31cd35893",
            "5e08063a-a4ab-4f24-a945-64d91cca965b",
            "c4fd13fd-72e3-4289-877f-4d41b89a858e",
            "f0355e47-fd62-4428-b274-3ec1f5d51f5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0c32a3b-0dbb-4763-b465-b941d2226ee7",
          "title": "Manage Control-IP Restriction Spec - Route as Scope",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set IP address that is not accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control-IP Restriction Spec - Route as Scope set IP address that is not accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 2412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n        consumers.setAllowedIPAddress(ipRestriction.ipRange_inValid, \"Route\");\n    });\n});",
              "err": {},
              "uuid": "925208a6-821a-4af9-a362-cb5f243c20bc",
              "parentUUID": "a0c32a3b-0dbb-4763-b465-b941d2226ee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify IP Restriction error when the API calls other than the allowed IP",
              "fullTitle": "Manage Control-IP Restriction Spec - Route as Scope verify IP Restriction error when the API calls other than the allowed IP",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(403);\n        expect(response.body.message).to.be.contain('Your IP address is not allowed');\n    });\n});",
              "err": {},
              "uuid": "7835002b-000e-4940-912a-8da6bd8bb83b",
              "parentUUID": "a0c32a3b-0dbb-4763-b465-b941d2226ee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set IP address that is accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control-IP Restriction Spec - Route as Scope set IP address that is accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 2353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(() => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n        consumers.setAllowedIPAddress(ipRestriction.ipRange_valid, \"Route\");\n    });\n});",
              "err": {},
              "uuid": "8288e13d-da71-489e-8886-cb4863013aa2",
              "parentUUID": "a0c32a3b-0dbb-4763-b465-b941d2226ee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the success stats when the API calls within the allowed IP range",
              "fullTitle": "Manage Control-IP Restriction Spec - Route as Scope verify the success stats when the API calls within the allowed IP range",
              "timedOut": null,
              "duration": 664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n});",
              "err": {},
              "uuid": "4d567718-a714-4c38-a830-648c8b9608d6",
              "parentUUID": "a0c32a3b-0dbb-4763-b465-b941d2226ee7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "925208a6-821a-4af9-a362-cb5f243c20bc",
            "7835002b-000e-4940-912a-8da6bd8bb83b",
            "8288e13d-da71-489e-8886-cb4863013aa2",
            "4d567718-a714-4c38-a830-648c8b9608d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "666a252a-9767-44f5-be5c-27bf3debe72d",
          "title": "Manage Control -Apply IP Restriction to Global and Consumer at Service level",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api ip-restriction to global service level",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Service level set api ip-restriction to global service level",
              "timedOut": null,
              "duration": 1251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(consumers.path);\nconsumers.clickOnTheFirstConsumerID();\nconsumers.deleteControl();\ncy.updateKongPlugin('services', 'ipRestriction').then((response) => {\n    expect(response.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "31de984d-38ee-4c95-8829-bd5378470f33",
              "parentUUID": "666a252a-9767-44f5-be5c-27bf3debe72d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that IP Restriction is set at global service level",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Service level Verify that IP Restriction is set at global service level",
              "timedOut": null,
              "duration": 652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n});",
              "err": {},
              "uuid": "019887b6-7cce-4b34-829f-887f7c761b51",
              "parentUUID": "666a252a-9767-44f5-be5c-27bf3debe72d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set IP address that is not accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Service level set IP address that is not accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 1597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, namespace }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n        consumers.setAllowedIPAddress(ipRestriction.ipRange_inValid);\n    });\n});",
              "err": {},
              "uuid": "d763def0-eb6a-4ba4-aa3d-2012960b94ad",
              "parentUUID": "666a252a-9767-44f5-be5c-27bf3debe72d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify IP Restriction error when the API calls other than the allowed IP",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Service level verify IP Restriction error when the API calls other than the allowed IP",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(403);\n        expect(response.body.message).to.be.contain('Your IP address is not allowed');\n    });\n});",
              "err": {},
              "uuid": "b7245fe6-ec2f-4b04-98a8-e7be3d5cdbb2",
              "parentUUID": "666a252a-9767-44f5-be5c-27bf3debe72d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31de984d-38ee-4c95-8829-bd5378470f33",
            "019887b6-7cce-4b34-829f-887f7c761b51",
            "d763def0-eb6a-4ba4-aa3d-2012960b94ad",
            "b7245fe6-ec2f-4b04-98a8-e7be3d5cdbb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3841,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c8a2e51-6092-4797-8e40-60f5aa25b014",
          "title": "Manage Control -Apply IP Restriction to Global and Consumer at Route level",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api ip-restriction to global service level",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Route level set api ip-restriction to global service level",
              "timedOut": null,
              "duration": 1170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(consumers.path);\nconsumers.clickOnTheFirstConsumerID();\nconsumers.deleteControl();\ncy.updateKongPlugin('routes', 'ipRestriction').then((response) => {\n    expect(response.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "d3d4e5f5-b661-4a04-8b34-188881d6d08c",
              "parentUUID": "4c8a2e51-6092-4797-8e40-60f5aa25b014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that IP Restriction is set at global service level",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Route level Verify that IP Restriction is set at global service level",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n});",
              "err": {},
              "uuid": "341a7d71-d7e4-4aed-b687-630511a631ec",
              "parentUUID": "4c8a2e51-6092-4797-8e40-60f5aa25b014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set IP address that is not accessible in the network as allowed IP and set service as scope",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Route level set IP address that is not accessible in the network as allowed IP and set service as scope",
              "timedOut": null,
              "duration": 1643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, namespace }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    cy.get('@manage-control-config-setting').then(({ ipRestriction }) => {\n        consumers.setAllowedIPAddress(ipRestriction.ipRange_inValid);\n    });\n});",
              "err": {},
              "uuid": "4dc7454a-d79a-426a-9444-8d9449514ff5",
              "parentUUID": "4c8a2e51-6092-4797-8e40-60f5aa25b014",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify IP Restriction error when the API calls other than the allowed IP",
              "fullTitle": "Manage Control -Apply IP Restriction to Global and Consumer at Route level verify IP Restriction error when the API calls other than the allowed IP",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(403);\n        expect(response.body.message).to.be.contain('Your IP address is not allowed');\n    });\n});",
              "err": {},
              "uuid": "1fa307f2-1abc-485f-ac5a-bf771fd6988c",
              "parentUUID": "4c8a2e51-6092-4797-8e40-60f5aa25b014",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3d4e5f5-b661-4a04-8b34-188881d6d08c",
            "341a7d71-d7e4-4aed-b687-630511a631ec",
            "4dc7454a-d79a-426a-9444-8d9449514ff5",
            "1fa307f2-1abc-485f-ac5a-bf771fd6988c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ca3ca3f2-6332-49f9-a381-da6eaedcfff1",
      "title": "",
      "fullFile": "cypress/tests/manage-control/10-rate-limiting.ts",
      "file": "cypress/tests/manage-control/10-rate-limiting.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d933b603-2898-4a0e-a3c7-ffd314a6afb0",
          "title": "Manage Control-Rate Limiting Spec for Service as Scope and Local Policy",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit as per the test config, Local Policy and Scope as Service",
              "fullTitle": "Manage Control-Rate Limiting Spec for Service as Scope and Local Policy set api rate limit as per the test config, Local Policy and Scope as Service",
              "timedOut": null,
              "duration": 6737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@access-manager').then(({ user, namespace }) => {\n    cy.login(user.credentials.username, user.credentials.password).then(() => {\n        home.useNamespace(namespace);\n        cy.visit(consumers.path);\n        consumers.clickOnTheFirstConsumerID();\n        cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n            consumers.setRateLimiting(rateLimiting.requestPerHour_Consumer);\n        });\n    });\n});",
              "err": {},
              "uuid": "1d178cf0-7358-4181-a81f-0265e360a2ae",
              "parentUUID": "d933b603-2898-4a0e-a3c7-ffd314a6afb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Rate Limiting Spec for Service as Scope and Local Policy verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "334e203f-a3e5-4fc0-a273-a1baad55ff7a",
              "parentUUID": "d933b603-2898-4a0e-a3c7-ffd314a6afb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d178cf0-7358-4181-a81f-0265e360a2ae",
            "334e203f-a3e5-4fc0-a273-a1baad55ff7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7137,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "21207e36-1c7c-4a01-b0f5-aa192d69f723",
          "title": "Manage Control-Rate Limiting Spec for Route as Scope and Local Policy",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit as per the test config, Local Policy and Scope as Route",
              "fullTitle": "Manage Control-Rate Limiting Spec for Route as Scope and Local Policy set api rate limit as per the test config, Local Policy and Scope as Route",
              "timedOut": null,
              "duration": 2033,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    consumers.setRateLimiting(rateLimiting.requestPerHour_Consumer, \"Route\");\n});",
              "err": {},
              "uuid": "9ae05c27-e81c-4de0-88da-54b3b78d0616",
              "parentUUID": "21207e36-1c7c-4a01-b0f5-aa192d69f723",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Rate Limiting Spec for Route as Scope and Local Policy verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "139974ee-2206-49bd-a406-cb0189fed293",
              "parentUUID": "21207e36-1c7c-4a01-b0f5-aa192d69f723",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ae05c27-e81c-4de0-88da-54b3b78d0616",
            "139974ee-2206-49bd-a406-cb0189fed293"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e709e042-7de5-464f-81c5-661d78be1f71",
          "title": "Manage Control-Rate Limiting Spec for Route as Scope and Redis Policy",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit as per the test config, Redis Policy and Scope as Route",
              "fullTitle": "Manage Control-Rate Limiting Spec for Route as Scope and Redis Policy set api rate limit as per the test config, Redis Policy and Scope as Route",
              "timedOut": null,
              "duration": 2047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    consumers.setRateLimiting(rateLimiting.requestPerHour_Consumer, \"Route\", \"Redis\");\n});",
              "err": {},
              "uuid": "83ac0b65-f4de-459b-9310-6088a314c98b",
              "parentUUID": "e709e042-7de5-464f-81c5-661d78be1f71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Rate Limiting Spec for Route as Scope and Redis Policy verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 1389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "f347e584-3e7e-4cea-ad1d-1602b2ac58a6",
              "parentUUID": "e709e042-7de5-464f-81c5-661d78be1f71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83ac0b65-f4de-459b-9310-6088a314c98b",
            "f347e584-3e7e-4cea-ad1d-1602b2ac58a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3436,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b4e676a3-e24b-4d14-bb40-37540f3b5f90",
          "title": "Manage Control-Rate Limiting Spec for Service as Scope and Redis Policy",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit as per the test config, Redis Policy and Scope as Service",
              "fullTitle": "Manage Control-Rate Limiting Spec for Service as Scope and Redis Policy set api rate limit as per the test config, Redis Policy and Scope as Service",
              "timedOut": null,
              "duration": 1732,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    consumers.setRateLimiting(rateLimiting.requestPerHour_Consumer, \"Service\", \"Redis\");\n});",
              "err": {},
              "uuid": "5cf9081e-5395-4cb7-8f62-f6ea6e919dd2",
              "parentUUID": "b4e676a3-e24b-4d14-bb40-37540f3b5f90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Rate Limiting Spec for Service as Scope and Redis Policy verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "5b193c48-7558-4a28-bdcb-25ac892cfa4b",
              "parentUUID": "b4e676a3-e24b-4d14-bb40-37540f3b5f90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cf9081e-5395-4cb7-8f62-f6ea6e919dd2",
            "5b193c48-7558-4a28-bdcb-25ac892cfa4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2052,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7ef75bb-91fe-4225-91df-c9b112d84ce0",
          "title": "Manage Control-Apply Rate limiting to Global and Consumer at Service level ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit to global service level",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Service level  set api rate limit to global service level",
              "timedOut": null,
              "duration": 1163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(consumers.path);\nconsumers.clickOnTheFirstConsumerID();\nconsumers.deleteControl();\ncy.updateKongPlugin('services', 'rateLimiting').then((response) => {\n    expect(response.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "f1b3b8f8-03b2-4d18-ac0b-95ace2cc202b",
              "parentUUID": "f7ef75bb-91fe-4225-91df-c9b112d84ce0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that Rate limiting is set at global service level",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Service level  Verify that Rate limiting is set at global service level",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n        expect(parseInt(response.headers[\"x-ratelimit-remaining-hour\"])).to.be.equal(18);\n    });\n});",
              "err": {},
              "uuid": "b4f709fa-8e6e-494b-9b53-3bf9d5ce9207",
              "parentUUID": "f7ef75bb-91fe-4225-91df-c9b112d84ce0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set api rate limit as per the test config, Redis Policy and Scope as Service",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Service level  set api rate limit as per the test config, Redis Policy and Scope as Service",
              "timedOut": null,
              "duration": 1501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    consumers.setRateLimiting(rateLimiting.requestPerHour_Global, \"Service\", \"Redis\");\n});",
              "err": {},
              "uuid": "6e4be980-502e-492b-8907-d68b567b8548",
              "parentUUID": "f7ef75bb-91fe-4225-91df-c9b112d84ce0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Service level  verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "be285355-00fc-43dd-a99d-868c5293ae51",
              "parentUUID": "f7ef75bb-91fe-4225-91df-c9b112d84ce0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1b3b8f8-03b2-4d18-ac0b-95ace2cc202b",
            "b4f709fa-8e6e-494b-9b53-3bf9d5ce9207",
            "6e4be980-502e-492b-8907-d68b567b8548",
            "be285355-00fc-43dd-a99d-868c5293ae51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7efdf135-1632-499a-8d10-6561c02f0643",
          "title": "Manage Control-Apply Rate limiting to Global and Consumer at Route level ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "set api rate limit to global service level",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Route level  set api rate limit to global service level",
              "timedOut": null,
              "duration": 1334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(consumers.path);\nconsumers.clickOnTheFirstConsumerID();\nconsumers.deleteControl();\ncy.updateKongPlugin('routes', 'rateLimiting').then((response) => {\n    expect(response.status).to.be.equal(201);\n});",
              "err": {},
              "uuid": "a8ce18ce-5925-4449-b8e7-8f66828e5306",
              "parentUUID": "7efdf135-1632-499a-8d10-6561c02f0643",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that Rate limiting is set at global service level",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Route level  Verify that Rate limiting is set at global service level",
              "timedOut": null,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n        expect(parseInt(response.headers[\"x-ratelimit-remaining-hour\"])).to.be.equal(18);\n    });\n});",
              "err": {},
              "uuid": "20b17349-779f-49da-af85-3acd71d2bee5",
              "parentUUID": "7efdf135-1632-499a-8d10-6561c02f0643",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "set api rate limit as per the test config, Redis Policy and Scope as Service",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Route level  set api rate limit as per the test config, Redis Policy and Scope as Service",
              "timedOut": null,
              "duration": 1488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@manage-control-config-setting').then(({ rateLimiting }) => {\n    cy.visit(consumers.path);\n    consumers.clickOnTheFirstConsumerID();\n    consumers.setRateLimiting(rateLimiting.requestPerHour_Global, \"Route\", \"Redis\");\n});",
              "err": {},
              "uuid": "736e67d4-aa61-45c5-9db8-454f2f823a90",
              "parentUUID": "7efdf135-1632-499a-8d10-6561c02f0643",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify rate limit error when the API calls beyond the limit",
              "fullTitle": "Manage Control-Apply Rate limiting to Global and Consumer at Route level  verify rate limit error when the API calls beyond the limit",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('@apiowner').then(({ product }) => {\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(200);\n    });\n    cy.makeKongRequest(product.environment.config.serviceName, 'GET').then((response) => {\n        expect(response.status).to.be.equal(429);\n        expect(response.body.message).to.be.contain('API rate limit exceeded');\n    });\n});",
              "err": {},
              "uuid": "ff2373ef-9880-4216-906b-d14217b93471",
              "parentUUID": "7efdf135-1632-499a-8d10-6561c02f0643",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8ce18ce-5925-4449-b8e7-8f66828e5306",
            "20b17349-779f-49da-af85-3acd71d2bee5",
            "736e67d4-aa61-45c5-9db8-454f2f823a90",
            "ff2373ef-9880-4216-906b-d14217b93471"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3394,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "html": false,
        "json": true,
        "overwrite": false
      },
      "version": "5.2.0"
    }
  }
}
